---
- hosts: all
  gather_facts: yes
  post_tasks:
    - name: Get IP address corresponding to the interface with the specified broadcast address
      changed_when: no
      shell: "/usr/sbin/ip addr | grep {{broadcast_address}} | awk -F'[ /]+' '{print $3}'"
      register: ip_addr_broadcast
    - name: Configure Kubelet
      become: yes
      template:
        backup: no
        dest: /etc/systemd/system/kubelet.service.d/90-node-ip.conf
        group: root
        mode: 0755
        owner: root
        src: templates/90-node-ip.conf.j2
      register: configure_kubelet
    - name: Force systemd to reread configs
      become: yes
      systemd:
        daemon_reload: yes
      when: configure_kubelet.changed
    - name: Generate Kubeadm configuration file
      become: yes
      template:
        backup: no
        dest: /tmp/kubeadm-config.yaml
        group: root
        mode: 0755
        owner: root
        src: templates/kubeadm-config.yaml.j2
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Initialize Kubernetes cluster (master)
      become: yes
      shell: "/vagrant/scripts/linux/bootstrap-kubernetes-{{kubernetes_classifier}}.sh /tmp/kubeadm-config.yaml"
      args:
        creates: /home/vagrant/.kube/config
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Initialize Kubernetes cluster (workers)
      become: yes
      shell: "/vagrant/scripts/linux/bootstrap-kubernetes-{{kubernetes_classifier}}.sh {{kubernetes_master_1_ip}} {{kubeadm_token}}"
      args:
        creates: /etc/kubernetes/kubelet.conf
      when: inventory_hostname != kubernetes_master_1_ip
    - name: Download gluster-kubernetes
      become: yes
      unarchive:
        dest: /opt
        remote_src: yes
        src: https://github.com/gluster/gluster-kubernetes/archive/master.zip
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Configure registry name resolution in hosts file
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: "^{{kubernetes_master_1_ip}}"
        line: "{{kubernetes_master_1_ip}} {{docker_registry_host}}"
        owner: root
        group: root
        mode: 0644
    - set_fact:
        openssl_registry_crt_path: /tmp/tls.crt
        openssl_registry_csr_path: /tmp/tls.csr
        openssl_registry_key_path: /tmp/tls.key
    - name: Generate an OpenSSL private key for Docker Registry
      local_action:
        module: openssl_privatekey
        path: "{{openssl_registry_key_path}}"
        size: 4096
        type: RSA
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Generate an OpenSSL CSR for Docker Registry
      local_action:
        module: openssl_csr
        common_name: "*.kubernetes-playground.local"
        country_name: IT
        email_address: fake@email.tld
        locality_name: Rome
        organization_name: Org
        organizational_unit_name: Ou
        path: "{{openssl_registry_csr_path}}"
        privatekey_path: "{{openssl_registry_key_path}}"
        state_or_province_name: Lazio
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Generate a Self Signed OpenSSL certificate for Docker Registry
      local_action:
        module: openssl_certificate
        csr_path: "{{openssl_registry_csr_path}}"
        path: "{{openssl_registry_crt_path}}"
        privatekey_path: "{{openssl_registry_key_path}}"
        provider: selfsigned
      when: inventory_hostname == kubernetes_master_1_ip
    - set_fact:
        self_signed_cert_path: /opt/tls/self_signed
        registry_cert_path: /etc/docker/certs.d/registry.kubernetes-playground.local
    - name: Ensure directories exist for local self-signed TLS certs
      become: yes
      file:
        group: root
        owner: root
        path: "{{item}}"
        state: directory
      with_items:
        - "{{registry_cert_path}}"
        - "{{self_signed_cert_path}}"
    - name: Configure self-signed TLS certificate for Docker Registry
      become: yes
      copy:
        dest: "{{item.destination}}"
        group: root
        owner: root
        mode: 0600
        src: "{{item.source}}"
      with_items:
        - source: "{{openssl_registry_crt_path}}"
          destination: "{{registry_cert_path}}/ca.crt"
        - source: "{{openssl_registry_crt_path}}"
          destination: "{{self_signed_cert_path}}/tls.crt"
        - source: "{{openssl_registry_csr_path}}"
          destination: "{{self_signed_cert_path}}/tls.csr"
        - source: "{{openssl_registry_key_path}}"
          destination: "{{self_signed_cert_path}}/tls.key"
  roles:
    - role: ferrarimarco.kubernetes
      become: yes
      ferrarimarco_kubernetes_filesystem: glusterfs
    - role: andrewrothstein.kubernetes-helm
      become: yes
